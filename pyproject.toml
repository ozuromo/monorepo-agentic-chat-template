[tool.poe.tasks]
# run with eg `uv run poe fmt`
fmt = "ruff format ${PWD}"
lint = "ruff check --fix ${PWD}"
test = "pytest ${PWD}"
all = [ {ref="fmt"}, {ref="lint"}, {ref="test"} ]

echo = "echo ${PWD}"

"ci:fmt" = "ruff format --check ${PWD}"  # fail if not formatted
"ci:lint" = "ruff check ${PWD}"

[project]
name = "agentic-chat"
version = "0.1.0"
description = "Example monorepo using uv"
readme = "README.md"
requires-python = ">=3.13"
dependencies = []

[dependency-groups]
dev = [
	"langgraph-cli[inmem]>=0.3.6",
    "poethepoet>=0.32.0",
    "pytest >= 8.3.4",
    "ruff >= 0.8.5",
]

[tool.uv.workspace]
members = ["libs/*", "apps/*"]

[tool.ruff]
target-version = "py313"
line-length = 120  # use whatever number makes you happy

[tool.ruff.lint]
select = [
	"E",    # style stuff, whitespaces
	"F",    # important pyflakes lints
	"I",    # import sorting
	# "N",    # naming
	"T100", # breakpoints (probably don't want these in prod!)
]

[tool.ruff.lint.isort]
# so it knows to group first-party imports last
known-first-party = ["src"]